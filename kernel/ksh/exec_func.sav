/*
   This file is part of MutekP.
  
   MutekP is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
  
   MutekP is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.
  
   You should have received a copy of the GNU General Public License
   along with MutekP; if not, write to the Free Software Foundation,
   Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  
   UPMC / LIP6 / SOC (c) 2008
   Copyright Ghassan Almaless <ghassan.almaless@gmail.com>
*/

#include <stdint.h>
#include <task.h>
#include <kminiShell.h>


static struct ms_argument_s *arg;
 
error_t exec_func(void *param)
{
  char *path_name;
  error_t err;
  uint32_t argc;

  arg  = (struct ms_argument_s *) param;
  argc = arg->argc;
  path_name = arg->argv[0];

  if(argc != 1)
  {
    ksh_print("exec: missing operand\n");
    return EINVAL;
  }

  arg->argv[0] = "/SYS/CLUSTER0/CPU0";
  arg->argv[1] = "/SYS/CLUSTER0/CPU1";
  arg->argv[2] = "/SYS/CLUSTER0/CPU2";
  arg->argv[3] = "/SYS/CLUSTER0/CPU3";
  arg->argv[4] = "/DEV/TTY0";
  arg->argc = 5;
  
  cp_func(param);
  
  if((err = do_exec(path_name)))
  {
    ksh_print("exec: error %d, faild to execute command %s\n", err, path_name);
    return err;
  }

  return 0;
}

